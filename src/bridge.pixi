include "brute.pixi";

fn RUN($func,$args)
{
    $size = get_size($args);
    if($size == 1)
    {
        get_prop(functions,$func)($args[0]);
    }
    else
    {
        if($size == 2)
        {
            get_prop(functions,$func)($args[0],$args[1]);
        }
        else
        {
            if($size == 3)
            {
                get_prop(functions,$func)($args[0],$args[1],$args[2]);
            }
            else
            {
                if($size == 4)
                {
                    get_prop(functions,$func)($args[0],$args[1],$args[2],$args[3]);
                }
                else
                {
                    if($size == 5)
                    {
                        get_prop(functions,$func)($args[0],$args[1],$args[2],$args[3],$args[4]);
                    }
                    else
                    {
                        if($size == 6)
                        {
                            get_prop(functions,$func)($args[0],$args[1],$args[2],$args[3],$args[4],$args[5]);
                        }
                        else
                        {
                            if($size == 7)
                            {
                                get_prop(functions,$func)($args[0],$args[1],$args[2],$args[3],$args[4],$args[5],$args[6]);
                            }
                            else
                            {
                                if($size == 8)
                                {
                                    get_prop(functions,$func)($args[0],$args[1],$args[2],$args[3],$args[4],$args[5],$args[6],$args[7]);
                                }
                                else
                                {
                                    if($size == 9)
                                    {
                                        get_prop(functions,$func)($args[0],$args[1],$args[2],$args[3],$args[4],$args[5],$args[6],$args[7],$args[8]);
                                    }
                                    else
                                    {
                                        if($size == 10)
                                        {
                                            get_prop(functions,$func)($args[0],$args[1],$args[2],$args[3],$args[4],$args[5],$args[6],$args[7],$args[8],$args[9]);
                                        }
                                        else
                                        {
                                            get_prop(functions,$func)();
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    get_prop(functions,$func)($args[0],$args[1],$args[2],$args[3],$args[4],$args[5],$args[6],$args[7],$args[8],$args[9]);
}

fn interpret($command)
{
    //printf("command: %s\n", $command);
    $splited = string_split($command, " ");
    $size = get_size($splited);
    $args = new($size-1);
    for ($i = 1; $i < $size; $i+1)
    {
        if($splited[$i][0] > 47 && $splited[$i][0] < 58)
        {
            $args[$i-1] = str_to_num($splited[$i]);
        }
        else
        {
            if($splited[$i][0] == '#')
            {
                $temp = string_sub($splited[$i], 1, get_size($splited[$i]));
                $args[$i-1] = get_prop(constants, $temp);
                //printf("r:%d g:%d b:%d\n", get_red($args[$i-1]), get_green($args[$i-1]), get_blue($args[$i-1]));
            }
            else
            {
                if($splited[$i][0] == '$')
                {
                    $temp = string_sub($splited[$i], 1, get_size($splited[$i]));
                    $args[$i-1] = get_prop(variables, $temp);
                }
                else
                {
                    $args[$i-1] = $splited[$i];
                }
            }
        }
    }

    RUN($splited[0], $args);

    for($i=0; $i < get_size($args); $i+1)
    {
        remove($args[$i]);
    }

    for($i=0; $i < get_size($splited); $i+1)
    {
        remove($splited[$i]);
    }

    remove($splited);
    remove($args);
}


/*
while(1)
{
    //$command = input();
    interpret("clear #WHITE;frame 0");
    //interpret("printf a234\n");
}
*/