include "src/bruter.pixi"
variables.system = system_new();
list_remove(variables.system.layers,0);

fn pattern_examples()
{
    //pattern examples start here, uncomment to test it
  ///*
  fn blackbox_wrapper()
  {
    $ptt = new(8,8);
    set_all_2d($ptt, just_return);//set all to return the pixel itself
    $ptt[0,0] = ret_black;
    $ptt[0,1] = ret_black;
    $ptt[0,2] = ret_black;
    $ptt[1,0] = ret_black;
    $ptt[2,0] = ret_black;
    $ptt[2,1] = ret_black;
    $ptt[2,2] = ret_black;
    $ptt[1,2] = ret_black;
    pattern(variables.system.layers[3], $ptt);
    remove($ptt);
  }
  auto_thread(blackbox_wrapper);//this one does not contains the interval, so it will generate a warning and run in manual mode

  fn grain($pixel, $x, $y)
  {
    ret(get_color(get_red($pixel)+random(1,100), get_green($pixel)+random(1,100), get_blue($pixel)+random(1,100)));
  }
  fn grain_pattern_wrapper()
  {
    $ptt = new(1,1);
    $ptt[0] = grain;
    pattern(variables.system.layers[1], $ptt);
    remove($ptt);
  }
  auto_thread( grain_pattern_wrapper, 5000)//this one contains the interval, so it will autodestroy after 5000ms
  //*/
}

dl = dlopen( "data/main.so" ) //Open the library
if dl >= 0
{
  startup = dlsym(dl, "startup", "p()" );
  r = dlcall(dl, startup)
  bulk_interpret(r);
  remove(r);
  main = dlsym(dl, "mainloop", "p(p)" );
  zero = "0";

  pattern_examples();
  //main loop
  while(1)
  {
    result = dlcall(dl, main, zero);
    bulk_interpret(result);
    remove(result);
  }
  dlclose( dl ) //Close the library
}
else
{
  warning("Could not open the library, interpreting brut instead.");
  //$l2 = string_remove_char($l, '\n');
  $example = read_file_safe("data/main.brut");
  $example2 = string_remove_char($example, '\n');
  bulk_interpret($example2);

  $l = read_file_safe("data/loop.brut");//not working for some reason
  $loop = "layers_render $system.layers;eventor $system;frame;";
  printf("strcmp: %d\n", strcmp($l, $loop));
  printf("l: %s\n\n%s\n", $l, $loop);
  pattern_examples();
  while(1)
  {
    //bulk_interpret($l); // need to fix this
    //bulk_interpret($l2);// this messes positions and such
    bulk_interpret($loop);
  }

}

